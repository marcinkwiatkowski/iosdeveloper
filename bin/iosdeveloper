#!/usr/bin/env ruby
require 'gli'
require 'io/console'
begin # XXX: Remove this begin/rescue before distributing your app
  require 'iosdeveloper'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/adt` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/adt now"
  exit 64
end

CONFIG_FILE = Dir.pwd + "/iosdeveloper.rc.yml"

include GLI::App

program_desc 'iOS Developer Tools'

version IOSDeveloper::VERSION

desc 'Apple ID'
arg_name 'username'
flag [:username]

desc 'Password'
arg_name 'password'
flag [:p, :password]

desc 'Team name'
arg_name 'team_name'
flag [:t, :team]

desc 'Creates the configuration file containing current global options'
command :init do |c|
  c.action do |global_options, options, args|
    File.open(CONFIG_FILE, 'w', 0600) do |file|
      YAML.dump(global_options.select { |k, v| [:username, :password, :team].include?(k) }, file)
    end
  end
end

desc 'List add registered devices'
command 'list-devices' do |c|
  c.action do |global_options, options, args|
    devices = portal(global_options).list_devices
    puts ""
    puts "Registered devices:"
    puts devices
  end
end

desc 'Registers a new device'
arg_name 'DEVICE_NAME DEVICE_ID'
command 'add-device' do |c|
  c.action do |global_options, options, args|
    device_name = args.shift
    help_now!('device id is required') if device_name.nil?
    device_id = args.shift
    help_now!('device id is required') if device_id.nil?
    portal(global_options).add_device(device_name, device_id)
  end
end

desc 'Downloads provisioning profile'
command 'download-profile' do |c|
  c.action do |global_options, options, args|
    profile_name = args.shift
    file_name = "#{profile_name}.mobileprovision"
    portal(global_options).download_profile(profile_name, file_name)
  end
end

desc 'List provisioning profiles'
command 'list-profiles' do |c|
  c.action do |global_options, options, args|
    profiles = portal(global_options).list_profiles
    puts ""
    puts "Development Provisioning Profiles:"
    puts profiles
  end
end

def portal global_options
  config_file = YAML::load(File.read(CONFIG_FILE))
  username = global_options[:username] || config_file[:username] || raise("username not provided")
  password = global_options[:password] || config_file[:password] || raise("password not provided")
  team_name = global_options[:team] || config_file[:team]

  IOSDeveloper::ProvisioningPortal.new(username, password, team_name)
end

pre do |global, command, options, args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global, command, options, args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
